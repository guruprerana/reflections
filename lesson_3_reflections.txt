1.Q. When would you want to use a remote repository 
rather than keeping all your work local?
When we want share and collaborate our project.
OR
When many people are working on the same project.
OR
We are creating an open source project.

2.Q Why might you want to always pull changes manually
rather than having Git automatically stay up-to-date 
with your remote repository?
We might not always want to pull all the changes
introduced. When we do it manually we can choose
which changes we want to be incorporated in our
local computer.

3.Q Describe the differences between forks, clones, and 
branches. When would you use one instead of another?
I would use forks when I want to make personal changes
on someone else's project on GitHub on whose I do not
have permissions to change anything.
I would use clone when I want to work on a repository
on my local computer.
I would use branches when I want to introduce a new
feature which may or may not work, on my local
computer.

4.Q. What is the benefit of having a copy of the last 
known state of the remote stored locally?
We have as much information about the remote branch
asd possible. We can continue to make changes locally
with knowing how ahead of the remote we are.

5.Q. How would you collaborate without using Git or 
GitHub? What would be easier, and what would be harder?
I would use a cloud service like Google Drive or 
Dropbox. The intuitive interface it provides would be
better, but it does not give as much power on
version-control as Git because it saves automatically.

Commands:

git remote  |    Show all remote locations for the repository
git remote add origin url |     Add a new remote location for the repository. Origin is the default name to use when you create only one remote location. Url should be the https url to the github repository.
git remove -v  |    Outputs the remote locations with verbose information (fetch and push urls)
git push origin master  |    Push the master branch to the remote location origin.
git pull origin master  |    Get the master branch from the remote location origin.
git pull origin master  |    = Git fetch origin + git merge master origin/master
git fetch origin  |    Get the changes from the remote location into the (hidden?) origin/master branch
